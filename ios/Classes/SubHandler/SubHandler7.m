//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

#import "SubHandler7.h"
#import "FluttifyMessageCodec.h"
#import <AMapSearchKit/AMapSearchKit.h>

// Dart端一次方法调用所存在的栈, 只有当MethodChannel传递参数受限时, 再启用这个容器
extern NSMutableDictionary<NSString*, NSObject*>* STACK;
// Dart端随机存取对象的容器
extern NSMutableDictionary<NSString*, NSObject*>* HEAP;
// 日志打印开关
extern BOOL enableLog;

@implementation AmapSearchFluttifyPlugin (SubHandler7)
- (NSDictionary<NSString*, Handler>*) getSubHandler7 {
    __weak __typeof(self)weakSelf = self;
    return @{
        @"AMapAOI::set_area": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAOI::set_area");
            }
        
            // args
            // jsonable arg
            CGFloat area = [args[@"area"] floatValue];
        
            // ref
            AMapAOI* ref = (AMapAOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.area = area;
            methodResult(@"success");
        },
        
        @"AMapRoad::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoad::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapRoad* ref = (AMapRoad*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapRoad::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoad::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapRoad* ref = (AMapRoad*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapRoad::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoad::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapRoad* ref = (AMapRoad*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapRoad::set_direction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoad::set_direction");
            }
        
            // args
            // jsonable arg
            NSString* direction = (NSString*) args[@"direction"];
        
            // ref
            AMapRoad* ref = (AMapRoad*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.direction = direction;
            methodResult(@"success");
        },
        
        @"AMapRoad::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoad::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapRoad* ref = (AMapRoad*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_direction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_direction");
            }
        
            // args
            // jsonable arg
            NSString* direction = (NSString*) args[@"direction"];
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.direction = direction;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_firstId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_firstId");
            }
        
            // args
            // jsonable arg
            NSString* firstId = (NSString*) args[@"firstId"];
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.firstId = firstId;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_firstName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_firstName");
            }
        
            // args
            // jsonable arg
            NSString* firstName = (NSString*) args[@"firstName"];
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.firstName = firstName;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_secondId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_secondId");
            }
        
            // args
            // jsonable arg
            NSString* secondId = (NSString*) args[@"secondId"];
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.secondId = secondId;
            methodResult(@"success");
        },
        
        @"AMapRoadInter::set_secondName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoadInter::set_secondName");
            }
        
            // args
            // jsonable arg
            NSString* secondName = (NSString*) args[@"secondName"];
        
            // ref
            AMapRoadInter* ref = (AMapRoadInter*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.secondName = secondName;
            methodResult(@"success");
        },
        
        @"AMapStreetNumber::set_street": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStreetNumber::set_street");
            }
        
            // args
            // jsonable arg
            NSString* street = (NSString*) args[@"street"];
        
            // ref
            AMapStreetNumber* ref = (AMapStreetNumber*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.street = street;
            methodResult(@"success");
        },
        
        @"AMapStreetNumber::set_number": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStreetNumber::set_number");
            }
        
            // args
            // jsonable arg
            NSString* number = (NSString*) args[@"number"];
        
            // ref
            AMapStreetNumber* ref = (AMapStreetNumber*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.number = number;
            methodResult(@"success");
        },
        
        @"AMapStreetNumber::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStreetNumber::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapStreetNumber* ref = (AMapStreetNumber*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapStreetNumber::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStreetNumber::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapStreetNumber* ref = (AMapStreetNumber*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapStreetNumber::set_direction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStreetNumber::set_direction");
            }
        
            // args
            // jsonable arg
            NSString* direction = (NSString*) args[@"direction"];
        
            // ref
            AMapStreetNumber* ref = (AMapStreetNumber*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.direction = direction;
            methodResult(@"success");
        },
        
        @"AMapBusinessArea::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusinessArea::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapBusinessArea* ref = (AMapBusinessArea*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapBusinessArea::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusinessArea::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapBusinessArea* ref = (AMapBusinessArea*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_country": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_country");
            }
        
            // args
            // jsonable arg
            NSString* country = (NSString*) args[@"country"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.country = country;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_countryCode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_countryCode");
            }
        
            // args
            // jsonable arg
            NSString* countryCode = (NSString*) args[@"countryCode"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.countryCode = countryCode;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_district": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_district");
            }
        
            // args
            // jsonable arg
            NSString* district = (NSString*) args[@"district"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.district = district;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_township": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_township");
            }
        
            // args
            // jsonable arg
            NSString* township = (NSString*) args[@"township"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.township = township;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_towncode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_towncode");
            }
        
            // args
            // jsonable arg
            NSString* towncode = (NSString*) args[@"towncode"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.towncode = towncode;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_neighborhood": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_neighborhood");
            }
        
            // args
            // jsonable arg
            NSString* neighborhood = (NSString*) args[@"neighborhood"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.neighborhood = neighborhood;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_building": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_building");
            }
        
            // args
            // jsonable arg
            NSString* building = (NSString*) args[@"building"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.building = building;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_streetNumber": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_streetNumber");
            }
        
            // args
            // ref arg
            AMapStreetNumber* streetNumber = (AMapStreetNumber*) (args[@"streetNumber"] == [NSNull null] ? nil : args[@"streetNumber"]);
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.streetNumber = streetNumber;
            methodResult(@"success");
        },
        
        @"AMapAddressComponent::set_businessAreas": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAddressComponent::set_businessAreas");
            }
        
            // args
            // list arg
            NSArray<AMapBusinessArea*>* businessAreas = (NSArray<AMapBusinessArea*>*) args[@"businessAreas"];
        
            // ref
            AMapAddressComponent* ref = (AMapAddressComponent*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.businessAreas = businessAreas;
            methodResult(@"success");
        },
        
        @"AMapReGeocode::set_formattedAddress": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapReGeocode::set_formattedAddress");
            }
        
            // args
            // jsonable arg
            NSString* formattedAddress = (NSString*) args[@"formattedAddress"];
        
            // ref
            AMapReGeocode* ref = (AMapReGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.formattedAddress = formattedAddress;
            methodResult(@"success");
        },
        
        @"AMapReGeocode::set_addressComponent": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapReGeocode::set_addressComponent");
            }
        
            // args
            // ref arg
            AMapAddressComponent* addressComponent = (AMapAddressComponent*) (args[@"addressComponent"] == [NSNull null] ? nil : args[@"addressComponent"]);
        
            // ref
            AMapReGeocode* ref = (AMapReGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.addressComponent = addressComponent;
            methodResult(@"success");
        },
        
        @"AMapReGeocode::set_roads": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapReGeocode::set_roads");
            }
        
            // args
            // list arg
            NSArray<AMapRoad*>* roads = (NSArray<AMapRoad*>*) args[@"roads"];
        
            // ref
            AMapReGeocode* ref = (AMapReGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.roads = roads;
            methodResult(@"success");
        },
        
        @"AMapReGeocode::set_roadinters": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapReGeocode::set_roadinters");
            }
        
            // args
            // list arg
            NSArray<AMapRoadInter*>* roadinters = (NSArray<AMapRoadInter*>*) args[@"roadinters"];
        
            // ref
            AMapReGeocode* ref = (AMapReGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.roadinters = roadinters;
            methodResult(@"success");
        },
        
        @"AMapReGeocode::set_pois": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapReGeocode::set_pois");
            }
        
            // args
            // list arg
            NSArray<AMapPOI*>* pois = (NSArray<AMapPOI*>*) args[@"pois"];
        
            // ref
            AMapReGeocode* ref = (AMapReGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.pois = pois;
            methodResult(@"success");
        },
        
        @"AMapReGeocode::set_aois": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapReGeocode::set_aois");
            }
        
            // args
            // list arg
            NSArray<AMapAOI*>* aois = (NSArray<AMapAOI*>*) args[@"aois"];
        
            // ref
            AMapReGeocode* ref = (AMapReGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.aois = aois;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_formattedAddress": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_formattedAddress");
            }
        
            // args
            // jsonable arg
            NSString* formattedAddress = (NSString*) args[@"formattedAddress"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.formattedAddress = formattedAddress;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_district": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_district");
            }
        
            // args
            // jsonable arg
            NSString* district = (NSString*) args[@"district"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.district = district;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_township": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_township");
            }
        
            // args
            // jsonable arg
            NSString* township = (NSString*) args[@"township"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.township = township;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_neighborhood": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_neighborhood");
            }
        
            // args
            // jsonable arg
            NSString* neighborhood = (NSString*) args[@"neighborhood"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.neighborhood = neighborhood;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_building": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_building");
            }
        
            // args
            // jsonable arg
            NSString* building = (NSString*) args[@"building"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.building = building;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_level": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_level");
            }
        
            // args
            // jsonable arg
            NSString* level = (NSString*) args[@"level"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.level = level;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_country": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_country");
            }
        
            // args
            // jsonable arg
            NSString* country = (NSString*) args[@"country"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.country = country;
            methodResult(@"success");
        },
        
        @"AMapGeocode::set_postcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeocode::set_postcode");
            }
        
            // args
            // jsonable arg
            NSString* postcode = (NSString*) args[@"postcode"];
        
            // ref
            AMapGeocode* ref = (AMapGeocode*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.postcode = postcode;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_buslines": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_buslines");
            }
        
            // args
            // list arg
            NSArray<AMapBusLine*>* buslines = (NSArray<AMapBusLine*>*) args[@"buslines"];
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.buslines = buslines;
            methodResult(@"success");
        },
        
        @"AMapBusStop::set_sequence": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusStop::set_sequence");
            }
        
            // args
            // jsonable arg
            NSString* sequence = (NSString*) args[@"sequence"];
        
            // ref
            AMapBusStop* ref = (AMapBusStop*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.sequence = sequence;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_type");
            }
        
            // args
            // jsonable arg
            NSString* type = (NSString*) args[@"type"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_polyline": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_polyline");
            }
        
            // args
            // jsonable arg
            NSString* polyline = (NSString*) args[@"polyline"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.polyline = polyline;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_startStop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_startStop");
            }
        
            // args
            // jsonable arg
            NSString* startStop = (NSString*) args[@"startStop"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.startStop = startStop;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_endStop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_endStop");
            }
        
            // args
            // jsonable arg
            NSString* endStop = (NSString*) args[@"endStop"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.endStop = endStop;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_startTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_startTime");
            }
        
            // args
            // jsonable arg
            NSString* startTime = (NSString*) args[@"startTime"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.startTime = startTime;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_endTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_endTime");
            }
        
            // args
            // jsonable arg
            NSString* endTime = (NSString*) args[@"endTime"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.endTime = endTime;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_company": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_company");
            }
        
            // args
            // jsonable arg
            NSString* company = (NSString*) args[@"company"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.company = company;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_distance");
            }
        
            // args
            // jsonable arg
            CGFloat distance = [args[@"distance"] floatValue];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_basicPrice": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_basicPrice");
            }
        
            // args
            // jsonable arg
            CGFloat basicPrice = [args[@"basicPrice"] floatValue];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.basicPrice = basicPrice;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_totalPrice": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_totalPrice");
            }
        
            // args
            // jsonable arg
            CGFloat totalPrice = [args[@"totalPrice"] floatValue];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.totalPrice = totalPrice;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_bounds": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_bounds");
            }
        
            // args
            // ref arg
            AMapGeoPolygon* bounds = (AMapGeoPolygon*) (args[@"bounds"] == [NSNull null] ? nil : args[@"bounds"]);
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.bounds = bounds;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_busStops": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_busStops");
            }
        
            // args
            // list arg
            NSArray<AMapBusStop*>* busStops = (NSArray<AMapBusStop*>*) args[@"busStops"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.busStops = busStops;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_departureStop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_departureStop");
            }
        
            // args
            // ref arg
            AMapBusStop* departureStop = (AMapBusStop*) (args[@"departureStop"] == [NSNull null] ? nil : args[@"departureStop"]);
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.departureStop = departureStop;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_arrivalStop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_arrivalStop");
            }
        
            // args
            // ref arg
            AMapBusStop* arrivalStop = (AMapBusStop*) (args[@"arrivalStop"] == [NSNull null] ? nil : args[@"arrivalStop"]);
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.arrivalStop = arrivalStop;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_viaBusStops": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_viaBusStops");
            }
        
            // args
            // list arg
            NSArray<AMapBusStop*>* viaBusStops = (NSArray<AMapBusStop*>*) args[@"viaBusStops"];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.viaBusStops = viaBusStops;
            methodResult(@"success");
        },
        
        @"AMapBusLine::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLine::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapBusLine* ref = (AMapBusLine*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_level": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_level");
            }
        
            // args
            // jsonable arg
            NSString* level = (NSString*) args[@"level"];
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.level = level;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_center": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_center");
            }
        
            // args
            // ref arg
            AMapGeoPoint* center = (AMapGeoPoint*) (args[@"center"] == [NSNull null] ? nil : args[@"center"]);
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.center = center;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_districts": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_districts");
            }
        
            // args
            // list arg
            NSArray<AMapDistrict*>* districts = (NSArray<AMapDistrict*>*) args[@"districts"];
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.districts = districts;
            methodResult(@"success");
        },
        
        @"AMapDistrict::set_polylines": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrict::set_polylines");
            }
        
            // args
            // jsonable arg
            NSArray<NSString*>* polylines = (NSArray<NSString*>*) args[@"polylines"];
        
            // ref
            AMapDistrict* ref = (AMapDistrict*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.polylines = polylines;
            methodResult(@"success");
        },
        
        @"AMapTMC::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTMC::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapTMC* ref = (AMapTMC*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapTMC::set_status": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTMC::set_status");
            }
        
            // args
            // jsonable arg
            NSString* status = (NSString*) args[@"status"];
        
            // ref
            AMapTMC* ref = (AMapTMC*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.status = status;
            methodResult(@"success");
        },
        
        @"AMapTMC::set_polyline": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTMC::set_polyline");
            }
        
            // args
            // jsonable arg
            NSString* polyline = (NSString*) args[@"polyline"];
        
            // ref
            AMapTMC* ref = (AMapTMC*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.polyline = polyline;
            methodResult(@"success");
        },
        
        @"AMapStep::set_instruction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_instruction");
            }
        
            // args
            // jsonable arg
            NSString* instruction = (NSString*) args[@"instruction"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.instruction = instruction;
            methodResult(@"success");
        },
        
        @"AMapStep::set_orientation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_orientation");
            }
        
            // args
            // jsonable arg
            NSString* orientation = (NSString*) args[@"orientation"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.orientation = orientation;
            methodResult(@"success");
        },
        
        @"AMapStep::set_road": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_road");
            }
        
            // args
            // jsonable arg
            NSString* road = (NSString*) args[@"road"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.road = road;
            methodResult(@"success");
        },
        
        @"AMapStep::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapStep::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapStep::set_polyline": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_polyline");
            }
        
            // args
            // jsonable arg
            NSString* polyline = (NSString*) args[@"polyline"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.polyline = polyline;
            methodResult(@"success");
        },
        
        @"AMapStep::set_action": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_action");
            }
        
            // args
            // jsonable arg
            NSString* action = (NSString*) args[@"action"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.action = action;
            methodResult(@"success");
        },
        
        @"AMapStep::set_assistantAction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_assistantAction");
            }
        
            // args
            // jsonable arg
            NSString* assistantAction = (NSString*) args[@"assistantAction"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.assistantAction = assistantAction;
            methodResult(@"success");
        },
        
        @"AMapStep::set_tolls": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_tolls");
            }
        
            // args
            // jsonable arg
            CGFloat tolls = [args[@"tolls"] floatValue];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tolls = tolls;
            methodResult(@"success");
        },
        
        @"AMapStep::set_tollDistance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_tollDistance");
            }
        
            // args
            // jsonable arg
            NSInteger tollDistance = [args[@"tollDistance"] longValue];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tollDistance = tollDistance;
            methodResult(@"success");
        },
        
        @"AMapStep::set_tollRoad": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_tollRoad");
            }
        
            // args
            // jsonable arg
            NSString* tollRoad = (NSString*) args[@"tollRoad"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tollRoad = tollRoad;
            methodResult(@"success");
        },
        
        @"AMapStep::set_totalTrafficLights": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_totalTrafficLights");
            }
        
            // args
            // jsonable arg
            NSInteger totalTrafficLights = [args[@"totalTrafficLights"] longValue];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.totalTrafficLights = totalTrafficLights;
            methodResult(@"success");
        },
        
        @"AMapStep::set_cities": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_cities");
            }
        
            // args
            // list arg
            NSArray<AMapCity*>* cities = (NSArray<AMapCity*>*) args[@"cities"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cities = cities;
            methodResult(@"success");
        },
        
        @"AMapStep::set_tmcs": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapStep::set_tmcs");
            }
        
            // args
            // list arg
            NSArray<AMapTMC*>* tmcs = (NSArray<AMapTMC*>*) args[@"tmcs"];
        
            // ref
            AMapStep* ref = (AMapStep*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tmcs = tmcs;
            methodResult(@"success");
        },
        
        @"AMapPath::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapPath::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapPath::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_strategy");
            }
        
            // args
            // jsonable arg
            NSString* strategy = (NSString*) args[@"strategy"];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapPath::set_steps": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_steps");
            }
        
            // args
            // list arg
            NSArray<AMapStep*>* steps = (NSArray<AMapStep*>*) args[@"steps"];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.steps = steps;
            methodResult(@"success");
        },
        
        @"AMapPath::set_tolls": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_tolls");
            }
        
            // args
            // jsonable arg
            CGFloat tolls = [args[@"tolls"] floatValue];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tolls = tolls;
            methodResult(@"success");
        },
        
        @"AMapPath::set_tollDistance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_tollDistance");
            }
        
            // args
            // jsonable arg
            NSInteger tollDistance = [args[@"tollDistance"] longValue];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tollDistance = tollDistance;
            methodResult(@"success");
        },
        
        @"AMapPath::set_totalTrafficLights": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_totalTrafficLights");
            }
        
            // args
            // jsonable arg
            NSInteger totalTrafficLights = [args[@"totalTrafficLights"] longValue];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.totalTrafficLights = totalTrafficLights;
            methodResult(@"success");
        },
        
        @"AMapPath::set_restriction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_restriction");
            }
        
            // args
            // jsonable arg
            NSInteger restriction = [args[@"restriction"] longValue];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.restriction = restriction;
            methodResult(@"success");
        },
        
        @"AMapPath::set_polyline": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPath::set_polyline");
            }
        
            // args
            // jsonable arg
            NSString* polyline = (NSString*) args[@"polyline"];
        
            // ref
            AMapPath* ref = (AMapPath*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.polyline = polyline;
            methodResult(@"success");
        },
        
        @"AMapFutureTimeInfoElement::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureTimeInfoElement::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapFutureTimeInfoElement* ref = (AMapFutureTimeInfoElement*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapFutureTimeInfoElement::set_pathindex": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureTimeInfoElement::set_pathindex");
            }
        
            // args
            // jsonable arg
            NSInteger pathindex = [args[@"pathindex"] longValue];
        
            // ref
            AMapFutureTimeInfoElement* ref = (AMapFutureTimeInfoElement*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.pathindex = pathindex;
            methodResult(@"success");
        },
        
        @"AMapFutureTimeInfoElement::set_restriction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureTimeInfoElement::set_restriction");
            }
        
            // args
            // jsonable arg
            NSInteger restriction = [args[@"restriction"] longValue];
        
            // ref
            AMapFutureTimeInfoElement* ref = (AMapFutureTimeInfoElement*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.restriction = restriction;
            methodResult(@"success");
        },
        
        @"AMapFutureTimeInfoElement::set_tmcs": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureTimeInfoElement::set_tmcs");
            }
        
            // args
            // list arg
            NSArray<AMapTMC*>* tmcs = (NSArray<AMapTMC*>*) args[@"tmcs"];
        
            // ref
            AMapFutureTimeInfoElement* ref = (AMapFutureTimeInfoElement*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tmcs = tmcs;
            methodResult(@"success");
        },
        
        @"AMapFutureTimeInfo::set_startTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureTimeInfo::set_startTime");
            }
        
            // args
            // jsonable arg
            NSString* startTime = (NSString*) args[@"startTime"];
        
            // ref
            AMapFutureTimeInfo* ref = (AMapFutureTimeInfo*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.startTime = startTime;
            methodResult(@"success");
        },
        
        @"AMapFutureTimeInfo::set_elements": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureTimeInfo::set_elements");
            }
        
            // args
            // list arg
            NSArray<AMapFutureTimeInfoElement*>* elements = (NSArray<AMapFutureTimeInfoElement*>*) args[@"elements"];
        
            // ref
            AMapFutureTimeInfo* ref = (AMapFutureTimeInfo*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.elements = elements;
            methodResult(@"success");
        },
        
        @"AMapWalking::set_origin": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWalking::set_origin");
            }
        
            // args
            // ref arg
            AMapGeoPoint* origin = (AMapGeoPoint*) (args[@"origin"] == [NSNull null] ? nil : args[@"origin"]);
        
            // ref
            AMapWalking* ref = (AMapWalking*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origin = origin;
            methodResult(@"success");
        },
        
        @"AMapWalking::set_destination": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWalking::set_destination");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destination = (AMapGeoPoint*) (args[@"destination"] == [NSNull null] ? nil : args[@"destination"]);
        
            // ref
            AMapWalking* ref = (AMapWalking*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destination = destination;
            methodResult(@"success");
        },
        
        @"AMapWalking::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWalking::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapWalking* ref = (AMapWalking*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapWalking::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWalking::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapWalking* ref = (AMapWalking*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapWalking::set_steps": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWalking::set_steps");
            }
        
            // args
            // list arg
            NSArray<AMapStep*>* steps = (NSArray<AMapStep*>*) args[@"steps"];
        
            // ref
            AMapWalking* ref = (AMapWalking*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.steps = steps;
            methodResult(@"success");
        },
        
        @"AMapTaxi::set_origin": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTaxi::set_origin");
            }
        
            // args
            // ref arg
            AMapGeoPoint* origin = (AMapGeoPoint*) (args[@"origin"] == [NSNull null] ? nil : args[@"origin"]);
        
            // ref
            AMapTaxi* ref = (AMapTaxi*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origin = origin;
            methodResult(@"success");
        },
        
        @"AMapTaxi::set_destination": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTaxi::set_destination");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destination = (AMapGeoPoint*) (args[@"destination"] == [NSNull null] ? nil : args[@"destination"]);
        
            // ref
            AMapTaxi* ref = (AMapTaxi*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destination = destination;
            methodResult(@"success");
        },
        
        @"AMapTaxi::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTaxi::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapTaxi* ref = (AMapTaxi*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapTaxi::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTaxi::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapTaxi* ref = (AMapTaxi*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapTaxi::set_sname": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTaxi::set_sname");
            }
        
            // args
            // jsonable arg
            NSString* sname = (NSString*) args[@"sname"];
        
            // ref
            AMapTaxi* ref = (AMapTaxi*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.sname = sname;
            methodResult(@"success");
        },
        
        @"AMapTaxi::set_tname": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTaxi::set_tname");
            }
        
            // args
            // jsonable arg
            NSString* tname = (NSString*) args[@"tname"];
        
            // ref
            AMapTaxi* ref = (AMapTaxi*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tname = tname;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_time": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_time");
            }
        
            // args
            // jsonable arg
            NSString* time = (NSString*) args[@"time"];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.time = time;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_wait": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_wait");
            }
        
            // args
            // jsonable arg
            NSInteger wait = [args[@"wait"] longValue];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.wait = wait;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_isStart": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_isStart");
            }
        
            // args
            // jsonable arg
            BOOL isStart = [args[@"isStart"] boolValue];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.isStart = isStart;
            methodResult(@"success");
        },
        
        @"AMapRailwayStation::set_isEnd": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwayStation::set_isEnd");
            }
        
            // args
            // jsonable arg
            BOOL isEnd = [args[@"isEnd"] boolValue];
        
            // ref
            AMapRailwayStation* ref = (AMapRailwayStation*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.isEnd = isEnd;
            methodResult(@"success");
        },
        
        @"AMapRailwaySpace::set_code": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwaySpace::set_code");
            }
        
            // args
            // jsonable arg
            NSString* code = (NSString*) args[@"code"];
        
            // ref
            AMapRailwaySpace* ref = (AMapRailwaySpace*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.code = code;
            methodResult(@"success");
        },
        
        @"AMapRailwaySpace::set_cost": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailwaySpace::set_cost");
            }
        
            // args
            // jsonable arg
            CGFloat cost = [args[@"cost"] floatValue];
        
            // ref
            AMapRailwaySpace* ref = (AMapRailwaySpace*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cost = cost;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_trip": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_trip");
            }
        
            // args
            // jsonable arg
            NSString* trip = (NSString*) args[@"trip"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.trip = trip;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_type");
            }
        
            // args
            // jsonable arg
            NSString* type = (NSString*) args[@"type"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_time": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_time");
            }
        
            // args
            // jsonable arg
            NSInteger time = [args[@"time"] longValue];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.time = time;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_departureStation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_departureStation");
            }
        
            // args
            // ref arg
            AMapRailwayStation* departureStation = (AMapRailwayStation*) (args[@"departureStation"] == [NSNull null] ? nil : args[@"departureStation"]);
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.departureStation = departureStation;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_arrivalStation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_arrivalStation");
            }
        
            // args
            // ref arg
            AMapRailwayStation* arrivalStation = (AMapRailwayStation*) (args[@"arrivalStation"] == [NSNull null] ? nil : args[@"arrivalStation"]);
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.arrivalStation = arrivalStation;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_spaces": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_spaces");
            }
        
            // args
            // list arg
            NSArray<AMapRailwaySpace*>* spaces = (NSArray<AMapRailwaySpace*>*) args[@"spaces"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.spaces = spaces;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_viaStops": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_viaStops");
            }
        
            // args
            // list arg
            NSArray<AMapRailwayStation*>* viaStops = (NSArray<AMapRailwayStation*>*) args[@"viaStops"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.viaStops = viaStops;
            methodResult(@"success");
        },
        
        @"AMapRailway::set_alters": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRailway::set_alters");
            }
        
            // args
            // list arg
            NSArray<AMapRailway*>* alters = (NSArray<AMapRailway*>*) args[@"alters"];
        
            // ref
            AMapRailway* ref = (AMapRailway*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.alters = alters;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_walking": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_walking");
            }
        
            // args
            // ref arg
            AMapWalking* walking = (AMapWalking*) (args[@"walking"] == [NSNull null] ? nil : args[@"walking"]);
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.walking = walking;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_buslines": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_buslines");
            }
        
            // args
            // list arg
            NSArray<AMapBusLine*>* buslines = (NSArray<AMapBusLine*>*) args[@"buslines"];
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.buslines = buslines;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_taxi": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_taxi");
            }
        
            // args
            // ref arg
            AMapTaxi* taxi = (AMapTaxi*) (args[@"taxi"] == [NSNull null] ? nil : args[@"taxi"]);
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.taxi = taxi;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_railway": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_railway");
            }
        
            // args
            // ref arg
            AMapRailway* railway = (AMapRailway*) (args[@"railway"] == [NSNull null] ? nil : args[@"railway"]);
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.railway = railway;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_enterName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_enterName");
            }
        
            // args
            // jsonable arg
            NSString* enterName = (NSString*) args[@"enterName"];
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.enterName = enterName;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_enterLocation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_enterLocation");
            }
        
            // args
            // ref arg
            AMapGeoPoint* enterLocation = (AMapGeoPoint*) (args[@"enterLocation"] == [NSNull null] ? nil : args[@"enterLocation"]);
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.enterLocation = enterLocation;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_exitName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_exitName");
            }
        
            // args
            // jsonable arg
            NSString* exitName = (NSString*) args[@"exitName"];
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.exitName = exitName;
            methodResult(@"success");
        },
        
        @"AMapSegment::set_exitLocation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSegment::set_exitLocation");
            }
        
            // args
            // ref arg
            AMapGeoPoint* exitLocation = (AMapGeoPoint*) (args[@"exitLocation"] == [NSNull null] ? nil : args[@"exitLocation"]);
        
            // ref
            AMapSegment* ref = (AMapSegment*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.exitLocation = exitLocation;
            methodResult(@"success");
        },
        
        @"AMapTransit::set_cost": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransit::set_cost");
            }
        
            // args
            // jsonable arg
            CGFloat cost = [args[@"cost"] floatValue];
        
            // ref
            AMapTransit* ref = (AMapTransit*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cost = cost;
            methodResult(@"success");
        },
        
        @"AMapTransit::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransit::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapTransit* ref = (AMapTransit*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapTransit::set_nightflag": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransit::set_nightflag");
            }
        
            // args
            // jsonable arg
            BOOL nightflag = [args[@"nightflag"] boolValue];
        
            // ref
            AMapTransit* ref = (AMapTransit*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nightflag = nightflag;
            methodResult(@"success");
        },
        
        @"AMapTransit::set_walkingDistance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransit::set_walkingDistance");
            }
        
            // args
            // jsonable arg
            NSInteger walkingDistance = [args[@"walkingDistance"] longValue];
        
            // ref
            AMapTransit* ref = (AMapTransit*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.walkingDistance = walkingDistance;
            methodResult(@"success");
        },
        
        @"AMapTransit::set_segments": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransit::set_segments");
            }
        
            // args
            // list arg
            NSArray<AMapSegment*>* segments = (NSArray<AMapSegment*>*) args[@"segments"];
        
            // ref
            AMapTransit* ref = (AMapTransit*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.segments = segments;
            methodResult(@"success");
        },
        
        @"AMapTransit::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransit::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapTransit* ref = (AMapTransit*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapRoute::set_origin": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoute::set_origin");
            }
        
            // args
            // ref arg
            AMapGeoPoint* origin = (AMapGeoPoint*) (args[@"origin"] == [NSNull null] ? nil : args[@"origin"]);
        
            // ref
            AMapRoute* ref = (AMapRoute*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origin = origin;
            methodResult(@"success");
        },
        
        @"AMapRoute::set_destination": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoute::set_destination");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destination = (AMapGeoPoint*) (args[@"destination"] == [NSNull null] ? nil : args[@"destination"]);
        
            // ref
            AMapRoute* ref = (AMapRoute*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destination = destination;
            methodResult(@"success");
        },
        
        @"AMapRoute::set_taxiCost": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoute::set_taxiCost");
            }
        
            // args
            // jsonable arg
            CGFloat taxiCost = [args[@"taxiCost"] floatValue];
        
            // ref
            AMapRoute* ref = (AMapRoute*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.taxiCost = taxiCost;
            methodResult(@"success");
        },
        
        @"AMapRoute::set_paths": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoute::set_paths");
            }
        
            // args
            // list arg
            NSArray<AMapPath*>* paths = (NSArray<AMapPath*>*) args[@"paths"];
        
            // ref
            AMapRoute* ref = (AMapRoute*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.paths = paths;
            methodResult(@"success");
        },
        
        @"AMapRoute::set_transits": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoute::set_transits");
            }
        
            // args
            // list arg
            NSArray<AMapTransit*>* transits = (NSArray<AMapTransit*>*) args[@"transits"];
        
            // ref
            AMapRoute* ref = (AMapRoute*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.transits = transits;
            methodResult(@"success");
        },
        
        @"AMapDistanceResult::set_originID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceResult::set_originID");
            }
        
            // args
            // jsonable arg
            NSInteger originID = [args[@"originID"] longValue];
        
            // ref
            AMapDistanceResult* ref = (AMapDistanceResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.originID = originID;
            methodResult(@"success");
        },
        
        @"AMapDistanceResult::set_destID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceResult::set_destID");
            }
        
            // args
            // jsonable arg
            NSInteger destID = [args[@"destID"] longValue];
        
            // ref
            AMapDistanceResult* ref = (AMapDistanceResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destID = destID;
            methodResult(@"success");
        },
        
        @"AMapDistanceResult::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceResult::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapDistanceResult* ref = (AMapDistanceResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapDistanceResult::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceResult::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapDistanceResult* ref = (AMapDistanceResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapDistanceResult::set_info": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceResult::set_info");
            }
        
            // args
            // jsonable arg
            NSString* info = (NSString*) args[@"info"];
        
            // ref
            AMapDistanceResult* ref = (AMapDistanceResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.info = info;
            methodResult(@"success");
        },
        
        @"AMapDistanceResult::set_code": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceResult::set_code");
            }
        
            // args
            // jsonable arg
            NSInteger code = [args[@"code"] longValue];
        
            // ref
            AMapDistanceResult* ref = (AMapDistanceResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.code = code;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_weather": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_weather");
            }
        
            // args
            // jsonable arg
            NSString* weather = (NSString*) args[@"weather"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.weather = weather;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_temperature": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_temperature");
            }
        
            // args
            // jsonable arg
            NSString* temperature = (NSString*) args[@"temperature"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.temperature = temperature;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_windDirection": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_windDirection");
            }
        
            // args
            // jsonable arg
            NSString* windDirection = (NSString*) args[@"windDirection"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.windDirection = windDirection;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_windPower": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_windPower");
            }
        
            // args
            // jsonable arg
            NSString* windPower = (NSString*) args[@"windPower"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.windPower = windPower;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_humidity": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_humidity");
            }
        
            // args
            // jsonable arg
            NSString* humidity = (NSString*) args[@"humidity"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.humidity = humidity;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherLive::set_reportTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherLive::set_reportTime");
            }
        
            // args
            // jsonable arg
            NSString* reportTime = (NSString*) args[@"reportTime"];
        
            // ref
            AMapLocalWeatherLive* ref = (AMapLocalWeatherLive*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.reportTime = reportTime;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_date": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_date");
            }
        
            // args
            // jsonable arg
            NSString* date = (NSString*) args[@"date"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.date = date;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_week": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_week");
            }
        
            // args
            // jsonable arg
            NSString* week = (NSString*) args[@"week"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.week = week;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_dayWeather": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_dayWeather");
            }
        
            // args
            // jsonable arg
            NSString* dayWeather = (NSString*) args[@"dayWeather"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.dayWeather = dayWeather;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_nightWeather": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_nightWeather");
            }
        
            // args
            // jsonable arg
            NSString* nightWeather = (NSString*) args[@"nightWeather"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nightWeather = nightWeather;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_dayTemp": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_dayTemp");
            }
        
            // args
            // jsonable arg
            NSString* dayTemp = (NSString*) args[@"dayTemp"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.dayTemp = dayTemp;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_nightTemp": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_nightTemp");
            }
        
            // args
            // jsonable arg
            NSString* nightTemp = (NSString*) args[@"nightTemp"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nightTemp = nightTemp;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_dayWind": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_dayWind");
            }
        
            // args
            // jsonable arg
            NSString* dayWind = (NSString*) args[@"dayWind"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.dayWind = dayWind;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_nightWind": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_nightWind");
            }
        
            // args
            // jsonable arg
            NSString* nightWind = (NSString*) args[@"nightWind"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nightWind = nightWind;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_dayPower": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_dayPower");
            }
        
            // args
            // jsonable arg
            NSString* dayPower = (NSString*) args[@"dayPower"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.dayPower = dayPower;
            methodResult(@"success");
        },
        
        @"AMapLocalDayWeatherForecast::set_nightPower": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalDayWeatherForecast::set_nightPower");
            }
        
            // args
            // jsonable arg
            NSString* nightPower = (NSString*) args[@"nightPower"];
        
            // ref
            AMapLocalDayWeatherForecast* ref = (AMapLocalDayWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nightPower = nightPower;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherForecast::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherForecast::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapLocalWeatherForecast* ref = (AMapLocalWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherForecast::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherForecast::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            AMapLocalWeatherForecast* ref = (AMapLocalWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherForecast::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherForecast::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapLocalWeatherForecast* ref = (AMapLocalWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherForecast::set_reportTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherForecast::set_reportTime");
            }
        
            // args
            // jsonable arg
            NSString* reportTime = (NSString*) args[@"reportTime"];
        
            // ref
            AMapLocalWeatherForecast* ref = (AMapLocalWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.reportTime = reportTime;
            methodResult(@"success");
        },
        
        @"AMapLocalWeatherForecast::set_casts": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocalWeatherForecast::set_casts");
            }
        
            // args
            // list arg
            NSArray<AMapLocalDayWeatherForecast*>* casts = (NSArray<AMapLocalDayWeatherForecast*>*) args[@"casts"];
        
            // ref
            AMapLocalWeatherForecast* ref = (AMapLocalWeatherForecast*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.casts = casts;
            methodResult(@"success");
        },
        
        @"AMapNearbyUserInfo::set_userID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbyUserInfo::set_userID");
            }
        
            // args
            // jsonable arg
            NSString* userID = (NSString*) args[@"userID"];
        
            // ref
            AMapNearbyUserInfo* ref = (AMapNearbyUserInfo*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.userID = userID;
            methodResult(@"success");
        },
        
    };
}

@end
