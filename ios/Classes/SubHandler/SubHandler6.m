//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

#import "SubHandler6.h"
#import "FluttifyMessageCodec.h"
#import <AMapSearchKit/AMapSearchKit.h>

// Dart端一次方法调用所存在的栈, 只有当MethodChannel传递参数受限时, 再启用这个容器
extern NSMutableDictionary<NSString*, NSObject*>* STACK;
// Dart端随机存取对象的容器
extern NSMutableDictionary<NSString*, NSObject*>* HEAP;
// 日志打印开关
extern BOOL enableLog;

@implementation AmapSearchFluttifyPlugin (SubHandler6)
- (NSDictionary<NSString*, Handler>*) getSubHandler6 {
    __weak __typeof(self)weakSelf = self;
    return @{
        @"AMapBusLineBaseSearchRequest::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineBaseSearchRequest::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapBusLineBaseSearchRequest* ref = (AMapBusLineBaseSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapBusLineBaseSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineBaseSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapBusLineBaseSearchRequest* ref = (AMapBusLineBaseSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapBusLineBaseSearchRequest::set_offset": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineBaseSearchRequest::set_offset");
            }
        
            // args
            // jsonable arg
            NSInteger offset = [args[@"offset"] longValue];
        
            // ref
            AMapBusLineBaseSearchRequest* ref = (AMapBusLineBaseSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.offset = offset;
            methodResult(@"success");
        },
        
        @"AMapBusLineBaseSearchRequest::set_page": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineBaseSearchRequest::set_page");
            }
        
            // args
            // jsonable arg
            NSInteger page = [args[@"page"] longValue];
        
            // ref
            AMapBusLineBaseSearchRequest* ref = (AMapBusLineBaseSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.page = page;
            methodResult(@"success");
        },
        
        @"AMapBusLineNameSearchRequest::set_keywords": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineNameSearchRequest::set_keywords");
            }
        
            // args
            // jsonable arg
            NSString* keywords = (NSString*) args[@"keywords"];
        
            // ref
            AMapBusLineNameSearchRequest* ref = (AMapBusLineNameSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keywords = keywords;
            methodResult(@"success");
        },
        
        @"AMapBusLineIDSearchRequest::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineIDSearchRequest::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapBusLineIDSearchRequest* ref = (AMapBusLineIDSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapBusLineSearchResponse::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineSearchResponse::set_count");
            }
        
            // args
            // jsonable arg
            NSInteger count = [args[@"count"] longValue];
        
            // ref
            AMapBusLineSearchResponse* ref = (AMapBusLineSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"AMapBusLineSearchResponse::set_suggestion": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineSearchResponse::set_suggestion");
            }
        
            // args
            // ref arg
            AMapSuggestion* suggestion = (AMapSuggestion*) (args[@"suggestion"] == [NSNull null] ? nil : args[@"suggestion"]);
        
            // ref
            AMapBusLineSearchResponse* ref = (AMapBusLineSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.suggestion = suggestion;
            methodResult(@"success");
        },
        
        @"AMapBusLineSearchResponse::set_buslines": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapBusLineSearchResponse::set_buslines");
            }
        
            // args
            // list arg
            NSArray<AMapBusLine*>* buslines = (NSArray<AMapBusLine*>*) args[@"buslines"];
        
            // ref
            AMapBusLineSearchResponse* ref = (AMapBusLineSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.buslines = buslines;
            methodResult(@"success");
        },
        
        @"AMapDistrictSearchRequest::set_keywords": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrictSearchRequest::set_keywords");
            }
        
            // args
            // jsonable arg
            NSString* keywords = (NSString*) args[@"keywords"];
        
            // ref
            AMapDistrictSearchRequest* ref = (AMapDistrictSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keywords = keywords;
            methodResult(@"success");
        },
        
        @"AMapDistrictSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrictSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapDistrictSearchRequest* ref = (AMapDistrictSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapDistrictSearchRequest::set_showBusinessArea": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrictSearchRequest::set_showBusinessArea");
            }
        
            // args
            // jsonable arg
            BOOL showBusinessArea = [args[@"showBusinessArea"] boolValue];
        
            // ref
            AMapDistrictSearchRequest* ref = (AMapDistrictSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.showBusinessArea = showBusinessArea;
            methodResult(@"success");
        },
        
        @"AMapDistrictSearchResponse::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrictSearchResponse::set_count");
            }
        
            // args
            // jsonable arg
            NSInteger count = [args[@"count"] longValue];
        
            // ref
            AMapDistrictSearchResponse* ref = (AMapDistrictSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"AMapDistrictSearchResponse::set_districts": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistrictSearchResponse::set_districts");
            }
        
            // args
            // list arg
            NSArray<AMapDistrict*>* districts = (NSArray<AMapDistrict*>*) args[@"districts"];
        
            // ref
            AMapDistrictSearchResponse* ref = (AMapDistrictSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.districts = districts;
            methodResult(@"success");
        },
        
        @"AMapRouteSearchBaseRequest::set_origin": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteSearchBaseRequest::set_origin");
            }
        
            // args
            // ref arg
            AMapGeoPoint* origin = (AMapGeoPoint*) (args[@"origin"] == [NSNull null] ? nil : args[@"origin"]);
        
            // ref
            AMapRouteSearchBaseRequest* ref = (AMapRouteSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origin = origin;
            methodResult(@"success");
        },
        
        @"AMapRouteSearchBaseRequest::set_destination": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteSearchBaseRequest::set_destination");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destination = (AMapGeoPoint*) (args[@"destination"] == [NSNull null] ? nil : args[@"destination"]);
        
            // ref
            AMapRouteSearchBaseRequest* ref = (AMapRouteSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destination = destination;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_waypoints": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_waypoints");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPoint*>* waypoints = (NSArray<AMapGeoPoint*>*) args[@"waypoints"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.waypoints = waypoints;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_avoidpolygons": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_avoidpolygons");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPolygon*>* avoidpolygons = (NSArray<AMapGeoPolygon*>*) args[@"avoidpolygons"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.avoidpolygons = avoidpolygons;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_avoidroad": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_avoidroad");
            }
        
            // args
            // jsonable arg
            NSString* avoidroad = (NSString*) args[@"avoidroad"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.avoidroad = avoidroad;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_originId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_originId");
            }
        
            // args
            // jsonable arg
            NSString* originId = (NSString*) args[@"originId"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.originId = originId;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_destinationId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_destinationId");
            }
        
            // args
            // jsonable arg
            NSString* destinationId = (NSString*) args[@"destinationId"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationId = destinationId;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_origintype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_origintype");
            }
        
            // args
            // jsonable arg
            NSString* origintype = (NSString*) args[@"origintype"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origintype = origintype;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_destinationtype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_destinationtype");
            }
        
            // args
            // jsonable arg
            NSString* destinationtype = (NSString*) args[@"destinationtype"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationtype = destinationtype;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_plate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_plate");
            }
        
            // args
            // jsonable arg
            NSString* plate = (NSString*) args[@"plate"];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plate = plate;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_ferry": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_ferry");
            }
        
            // args
            // jsonable arg
            NSInteger ferry = [args[@"ferry"] longValue];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.ferry = ferry;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_cartype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_cartype");
            }
        
            // args
            // jsonable arg
            NSInteger cartype = [args[@"cartype"] longValue];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cartype = cartype;
            methodResult(@"success");
        },
        
        @"AMapDrivingCalRouteSearchRequest::set_showFieldType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingCalRouteSearchRequest::set_showFieldType");
            }
        
            // args
            // enum arg
            AMapDrivingRouteShowFieldType showFieldType = (AMapDrivingRouteShowFieldType) [args[@"showFieldType"] integerValue];
        
            // ref
            AMapDrivingCalRouteSearchRequest* ref = (AMapDrivingCalRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.showFieldType = showFieldType;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_waypoints": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_waypoints");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPoint*>* waypoints = (NSArray<AMapGeoPoint*>*) args[@"waypoints"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.waypoints = waypoints;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_avoidpolygons": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_avoidpolygons");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPolygon*>* avoidpolygons = (NSArray<AMapGeoPolygon*>*) args[@"avoidpolygons"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.avoidpolygons = avoidpolygons;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_avoidroad": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_avoidroad");
            }
        
            // args
            // jsonable arg
            NSString* avoidroad = (NSString*) args[@"avoidroad"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.avoidroad = avoidroad;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_originId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_originId");
            }
        
            // args
            // jsonable arg
            NSString* originId = (NSString*) args[@"originId"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.originId = originId;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_destinationId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_destinationId");
            }
        
            // args
            // jsonable arg
            NSString* destinationId = (NSString*) args[@"destinationId"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationId = destinationId;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_origintype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_origintype");
            }
        
            // args
            // jsonable arg
            NSString* origintype = (NSString*) args[@"origintype"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origintype = origintype;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_destinationtype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_destinationtype");
            }
        
            // args
            // jsonable arg
            NSString* destinationtype = (NSString*) args[@"destinationtype"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationtype = destinationtype;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_plateProvince": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_plateProvince");
            }
        
            // args
            // jsonable arg
            NSString* plateProvince = (NSString*) args[@"plateProvince"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plateProvince = plateProvince;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_plateNumber": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_plateNumber");
            }
        
            // args
            // jsonable arg
            NSString* plateNumber = (NSString*) args[@"plateNumber"];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plateNumber = plateNumber;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_ferry": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_ferry");
            }
        
            // args
            // jsonable arg
            NSInteger ferry = [args[@"ferry"] longValue];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.ferry = ferry;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_cartype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_cartype");
            }
        
            // args
            // jsonable arg
            NSInteger cartype = [args[@"cartype"] longValue];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cartype = cartype;
            methodResult(@"success");
        },
        
        @"AMapDrivingRouteSearchRequest::set_exclude": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDrivingRouteSearchRequest::set_exclude");
            }
        
            // args
            // enum arg
            AMapDrivingRouteExcludeType exclude = (AMapDrivingRouteExcludeType) [args[@"exclude"] integerValue];
        
            // ref
            AMapDrivingRouteSearchRequest* ref = (AMapDrivingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.exclude = exclude;
            methodResult(@"success");
        },
        
        @"AMapWalkingRouteSearchRequest::set_multipath": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWalkingRouteSearchRequest::set_multipath");
            }
        
            // args
            // jsonable arg
            NSInteger multipath = [args[@"multipath"] longValue];
        
            // ref
            AMapWalkingRouteSearchRequest* ref = (AMapWalkingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.multipath = multipath;
            methodResult(@"success");
        },
        
        @"AMapTransitRouteSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransitRouteSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapTransitRouteSearchRequest* ref = (AMapTransitRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapTransitRouteSearchRequest::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransitRouteSearchRequest::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapTransitRouteSearchRequest* ref = (AMapTransitRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapTransitRouteSearchRequest::set_destinationCity": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransitRouteSearchRequest::set_destinationCity");
            }
        
            // args
            // jsonable arg
            NSString* destinationCity = (NSString*) args[@"destinationCity"];
        
            // ref
            AMapTransitRouteSearchRequest* ref = (AMapTransitRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationCity = destinationCity;
            methodResult(@"success");
        },
        
        @"AMapTransitRouteSearchRequest::set_nightflag": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransitRouteSearchRequest::set_nightflag");
            }
        
            // args
            // jsonable arg
            BOOL nightflag = [args[@"nightflag"] boolValue];
        
            // ref
            AMapTransitRouteSearchRequest* ref = (AMapTransitRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nightflag = nightflag;
            methodResult(@"success");
        },
        
        @"AMapTransitRouteSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTransitRouteSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapTransitRouteSearchRequest* ref = (AMapTransitRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapRidingRouteSearchRequest::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRidingRouteSearchRequest::set_type");
            }
        
            // args
            // jsonable arg
            NSInteger type = [args[@"type"] longValue];
        
            // ref
            AMapRidingRouteSearchRequest* ref = (AMapRidingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapRidingRouteSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRidingRouteSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapRidingRouteSearchRequest* ref = (AMapRidingRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapRouteSearchResponse::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteSearchResponse::set_count");
            }
        
            // args
            // jsonable arg
            NSInteger count = [args[@"count"] longValue];
        
            // ref
            AMapRouteSearchResponse* ref = (AMapRouteSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"AMapRouteSearchResponse::set_route": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteSearchResponse::set_route");
            }
        
            // args
            // ref arg
            AMapRoute* route = (AMapRoute*) (args[@"route"] == [NSNull null] ? nil : args[@"route"]);
        
            // ref
            AMapRouteSearchResponse* ref = (AMapRouteSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.route = route;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_waypoints": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_waypoints");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPoint*>* waypoints = (NSArray<AMapGeoPoint*>*) args[@"waypoints"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.waypoints = waypoints;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_originId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_originId");
            }
        
            // args
            // jsonable arg
            NSString* originId = (NSString*) args[@"originId"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.originId = originId;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_destinationId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_destinationId");
            }
        
            // args
            // jsonable arg
            NSString* destinationId = (NSString*) args[@"destinationId"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationId = destinationId;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_origintype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_origintype");
            }
        
            // args
            // jsonable arg
            NSString* origintype = (NSString*) args[@"origintype"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origintype = origintype;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_destinationtype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_destinationtype");
            }
        
            // args
            // jsonable arg
            NSString* destinationtype = (NSString*) args[@"destinationtype"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationtype = destinationtype;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_plateProvince": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_plateProvince");
            }
        
            // args
            // jsonable arg
            NSString* plateProvince = (NSString*) args[@"plateProvince"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plateProvince = plateProvince;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_plateNumber": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_plateNumber");
            }
        
            // args
            // jsonable arg
            NSString* plateNumber = (NSString*) args[@"plateNumber"];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plateNumber = plateNumber;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_size": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_size");
            }
        
            // args
            // enum arg
            AMapTruckSizeType size = (AMapTruckSizeType) [args[@"size"] integerValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.size = size;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_height": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_height");
            }
        
            // args
            // jsonable arg
            CGFloat height = [args[@"height"] floatValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.height = height;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_width": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_width");
            }
        
            // args
            // jsonable arg
            CGFloat width = [args[@"width"] floatValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.width = width;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_load": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_load");
            }
        
            // args
            // jsonable arg
            CGFloat load = [args[@"load"] floatValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.load = load;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_weight": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_weight");
            }
        
            // args
            // jsonable arg
            CGFloat weight = [args[@"weight"] floatValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.weight = weight;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_axis": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_axis");
            }
        
            // args
            // jsonable arg
            NSInteger axis = [args[@"axis"] longValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.axis = axis;
            methodResult(@"success");
        },
        
        @"AMapTruckRouteSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTruckRouteSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapTruckRouteSearchRequest* ref = (AMapTruckRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapDistanceSearchRequest::set_origins": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceSearchRequest::set_origins");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPoint*>* origins = (NSArray<AMapGeoPoint*>*) args[@"origins"];
        
            // ref
            AMapDistanceSearchRequest* ref = (AMapDistanceSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origins = origins;
            methodResult(@"success");
        },
        
        @"AMapDistanceSearchRequest::set_destination": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceSearchRequest::set_destination");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destination = (AMapGeoPoint*) (args[@"destination"] == [NSNull null] ? nil : args[@"destination"]);
        
            // ref
            AMapDistanceSearchRequest* ref = (AMapDistanceSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destination = destination;
            methodResult(@"success");
        },
        
        @"AMapDistanceSearchRequest::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceSearchRequest::set_type");
            }
        
            // args
            // enum arg
            AMapDistanceSearchType type = (AMapDistanceSearchType) [args[@"type"] integerValue];
        
            // ref
            AMapDistanceSearchRequest* ref = (AMapDistanceSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapDistanceSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapDistanceSearchRequest* ref = (AMapDistanceSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapDistanceSearchRequest::set_requireExtension": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceSearchRequest::set_requireExtension");
            }
        
            // args
            // jsonable arg
            BOOL requireExtension = [args[@"requireExtension"] boolValue];
        
            // ref
            AMapDistanceSearchRequest* ref = (AMapDistanceSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.requireExtension = requireExtension;
            methodResult(@"success");
        },
        
        @"AMapDistanceSearchResponse::set_results": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapDistanceSearchResponse::set_results");
            }
        
            // args
            // list arg
            NSArray<AMapDistanceResult*>* results = (NSArray<AMapDistanceResult*>*) args[@"results"];
        
            // ref
            AMapDistanceSearchResponse* ref = (AMapDistanceSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.results = results;
            methodResult(@"success");
        },
        
        @"AMapWeatherSearchRequest::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWeatherSearchRequest::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapWeatherSearchRequest* ref = (AMapWeatherSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapWeatherSearchRequest::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWeatherSearchRequest::set_type");
            }
        
            // args
            // enum arg
            AMapWeatherType type = (AMapWeatherType) [args[@"type"] integerValue];
        
            // ref
            AMapWeatherSearchRequest* ref = (AMapWeatherSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapWeatherSearchResponse::set_lives": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWeatherSearchResponse::set_lives");
            }
        
            // args
            // list arg
            NSArray<AMapLocalWeatherLive*>* lives = (NSArray<AMapLocalWeatherLive*>*) args[@"lives"];
        
            // ref
            AMapWeatherSearchResponse* ref = (AMapWeatherSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.lives = lives;
            methodResult(@"success");
        },
        
        @"AMapWeatherSearchResponse::set_forecasts": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapWeatherSearchResponse::set_forecasts");
            }
        
            // args
            // list arg
            NSArray<AMapLocalWeatherForecast*>* forecasts = (NSArray<AMapLocalWeatherForecast*>*) args[@"forecasts"];
        
            // ref
            AMapWeatherSearchResponse* ref = (AMapWeatherSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.forecasts = forecasts;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchRequest::set_center": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchRequest::set_center");
            }
        
            // args
            // ref arg
            AMapGeoPoint* center = (AMapGeoPoint*) (args[@"center"] == [NSNull null] ? nil : args[@"center"]);
        
            // ref
            AMapNearbySearchRequest* ref = (AMapNearbySearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.center = center;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchRequest::set_radius": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchRequest::set_radius");
            }
        
            // args
            // jsonable arg
            NSInteger radius = [args[@"radius"] longValue];
        
            // ref
            AMapNearbySearchRequest* ref = (AMapNearbySearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.radius = radius;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchRequest::set_searchType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchRequest::set_searchType");
            }
        
            // args
            // enum arg
            AMapNearbySearchType searchType = (AMapNearbySearchType) [args[@"searchType"] integerValue];
        
            // ref
            AMapNearbySearchRequest* ref = (AMapNearbySearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.searchType = searchType;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchRequest::set_timeRange": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchRequest::set_timeRange");
            }
        
            // args
            // jsonable arg
            NSInteger timeRange = [args[@"timeRange"] longValue];
        
            // ref
            AMapNearbySearchRequest* ref = (AMapNearbySearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.timeRange = timeRange;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchRequest::set_limit": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchRequest::set_limit");
            }
        
            // args
            // jsonable arg
            NSInteger limit = [args[@"limit"] longValue];
        
            // ref
            AMapNearbySearchRequest* ref = (AMapNearbySearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.limit = limit;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchResponse::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchResponse::set_count");
            }
        
            // args
            // jsonable arg
            NSInteger count = [args[@"count"] longValue];
        
            // ref
            AMapNearbySearchResponse* ref = (AMapNearbySearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"AMapNearbySearchResponse::set_infos": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNearbySearchResponse::set_infos");
            }
        
            // args
            // list arg
            NSArray<AMapNearbyUserInfo*>* infos = (NSArray<AMapNearbyUserInfo*>*) args[@"infos"];
        
            // ref
            AMapNearbySearchResponse* ref = (AMapNearbySearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.infos = infos;
            methodResult(@"success");
        },
        
        @"AMapCloudSearchBaseRequest::set_tableID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudSearchBaseRequest::set_tableID");
            }
        
            // args
            // jsonable arg
            NSString* tableID = (NSString*) args[@"tableID"];
        
            // ref
            AMapCloudSearchBaseRequest* ref = (AMapCloudSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tableID = tableID;
            methodResult(@"success");
        },
        
        @"AMapCloudSearchBaseRequest::set_filter": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudSearchBaseRequest::set_filter");
            }
        
            // args
            // jsonable arg
            NSArray<NSString*>* filter = (NSArray<NSString*>*) args[@"filter"];
        
            // ref
            AMapCloudSearchBaseRequest* ref = (AMapCloudSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.filter = filter;
            methodResult(@"success");
        },
        
        @"AMapCloudSearchBaseRequest::set_sortFields": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudSearchBaseRequest::set_sortFields");
            }
        
            // args
            // jsonable arg
            NSString* sortFields = (NSString*) args[@"sortFields"];
        
            // ref
            AMapCloudSearchBaseRequest* ref = (AMapCloudSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.sortFields = sortFields;
            methodResult(@"success");
        },
        
        @"AMapCloudSearchBaseRequest::set_sortType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudSearchBaseRequest::set_sortType");
            }
        
            // args
            // enum arg
            AMapCloudSortType sortType = (AMapCloudSortType) [args[@"sortType"] integerValue];
        
            // ref
            AMapCloudSearchBaseRequest* ref = (AMapCloudSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.sortType = sortType;
            methodResult(@"success");
        },
        
        @"AMapCloudSearchBaseRequest::set_offset": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudSearchBaseRequest::set_offset");
            }
        
            // args
            // jsonable arg
            NSInteger offset = [args[@"offset"] longValue];
        
            // ref
            AMapCloudSearchBaseRequest* ref = (AMapCloudSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.offset = offset;
            methodResult(@"success");
        },
        
        @"AMapCloudSearchBaseRequest::set_page": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudSearchBaseRequest::set_page");
            }
        
            // args
            // jsonable arg
            NSInteger page = [args[@"page"] longValue];
        
            // ref
            AMapCloudSearchBaseRequest* ref = (AMapCloudSearchBaseRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.page = page;
            methodResult(@"success");
        },
        
        @"AMapCloudPOIAroundSearchRequest::set_center": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOIAroundSearchRequest::set_center");
            }
        
            // args
            // ref arg
            AMapGeoPoint* center = (AMapGeoPoint*) (args[@"center"] == [NSNull null] ? nil : args[@"center"]);
        
            // ref
            AMapCloudPOIAroundSearchRequest* ref = (AMapCloudPOIAroundSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.center = center;
            methodResult(@"success");
        },
        
        @"AMapCloudPOIAroundSearchRequest::set_radius": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOIAroundSearchRequest::set_radius");
            }
        
            // args
            // jsonable arg
            NSInteger radius = [args[@"radius"] longValue];
        
            // ref
            AMapCloudPOIAroundSearchRequest* ref = (AMapCloudPOIAroundSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.radius = radius;
            methodResult(@"success");
        },
        
        @"AMapCloudPOIAroundSearchRequest::set_keywords": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOIAroundSearchRequest::set_keywords");
            }
        
            // args
            // jsonable arg
            NSString* keywords = (NSString*) args[@"keywords"];
        
            // ref
            AMapCloudPOIAroundSearchRequest* ref = (AMapCloudPOIAroundSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keywords = keywords;
            methodResult(@"success");
        },
        
        @"AMapCloudPOIPolygonSearchRequest::set_polygon": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOIPolygonSearchRequest::set_polygon");
            }
        
            // args
            // ref arg
            AMapGeoPolygon* polygon = (AMapGeoPolygon*) (args[@"polygon"] == [NSNull null] ? nil : args[@"polygon"]);
        
            // ref
            AMapCloudPOIPolygonSearchRequest* ref = (AMapCloudPOIPolygonSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.polygon = polygon;
            methodResult(@"success");
        },
        
        @"AMapCloudPOIPolygonSearchRequest::set_keywords": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOIPolygonSearchRequest::set_keywords");
            }
        
            // args
            // jsonable arg
            NSString* keywords = (NSString*) args[@"keywords"];
        
            // ref
            AMapCloudPOIPolygonSearchRequest* ref = (AMapCloudPOIPolygonSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keywords = keywords;
            methodResult(@"success");
        },
        
        @"AMapCloudPOIIDSearchRequest::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOIIDSearchRequest::set_uid");
            }
        
            // args
            // jsonable arg
            NSInteger uid = [args[@"uid"] longValue];
        
            // ref
            AMapCloudPOIIDSearchRequest* ref = (AMapCloudPOIIDSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapCloudPOILocalSearchRequest::set_keywords": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOILocalSearchRequest::set_keywords");
            }
        
            // args
            // jsonable arg
            NSString* keywords = (NSString*) args[@"keywords"];
        
            // ref
            AMapCloudPOILocalSearchRequest* ref = (AMapCloudPOILocalSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keywords = keywords;
            methodResult(@"success");
        },
        
        @"AMapCloudPOILocalSearchRequest::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOILocalSearchRequest::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapCloudPOILocalSearchRequest* ref = (AMapCloudPOILocalSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapCloudPOISearchResponse::set_count": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOISearchResponse::set_count");
            }
        
            // args
            // jsonable arg
            NSInteger count = [args[@"count"] longValue];
        
            // ref
            AMapCloudPOISearchResponse* ref = (AMapCloudPOISearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.count = count;
            methodResult(@"success");
        },
        
        @"AMapCloudPOISearchResponse::set_POIs": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCloudPOISearchResponse::set_POIs");
            }
        
            // args
            // list arg
            NSArray<AMapCloudPOI*>* POIs = (NSArray<AMapCloudPOI*>*) args[@"POIs"];
        
            // ref
            AMapCloudPOISearchResponse* ref = (AMapCloudPOISearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.POIs = POIs;
            methodResult(@"success");
        },
        
        @"AMapLocationShareSearchRequest::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocationShareSearchRequest::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapLocationShareSearchRequest* ref = (AMapLocationShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapLocationShareSearchRequest::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapLocationShareSearchRequest::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapLocationShareSearchRequest* ref = (AMapLocationShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapPOIShareSearchRequest::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIShareSearchRequest::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapPOIShareSearchRequest* ref = (AMapPOIShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapPOIShareSearchRequest::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIShareSearchRequest::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapPOIShareSearchRequest* ref = (AMapPOIShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapPOIShareSearchRequest::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIShareSearchRequest::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapPOIShareSearchRequest* ref = (AMapPOIShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapPOIShareSearchRequest::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIShareSearchRequest::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            AMapPOIShareSearchRequest* ref = (AMapPOIShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"AMapRouteShareSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteShareSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapRouteShareSearchRequest* ref = (AMapRouteShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapRouteShareSearchRequest::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteShareSearchRequest::set_type");
            }
        
            // args
            // jsonable arg
            NSInteger type = [args[@"type"] longValue];
        
            // ref
            AMapRouteShareSearchRequest* ref = (AMapRouteShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapRouteShareSearchRequest::set_startCoordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteShareSearchRequest::set_startCoordinate");
            }
        
            // args
            // ref arg
            AMapGeoPoint* startCoordinate = (AMapGeoPoint*) (args[@"startCoordinate"] == [NSNull null] ? nil : args[@"startCoordinate"]);
        
            // ref
            AMapRouteShareSearchRequest* ref = (AMapRouteShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.startCoordinate = startCoordinate;
            methodResult(@"success");
        },
        
        @"AMapRouteShareSearchRequest::set_destinationCoordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteShareSearchRequest::set_destinationCoordinate");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destinationCoordinate = (AMapGeoPoint*) (args[@"destinationCoordinate"] == [NSNull null] ? nil : args[@"destinationCoordinate"]);
        
            // ref
            AMapRouteShareSearchRequest* ref = (AMapRouteShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationCoordinate = destinationCoordinate;
            methodResult(@"success");
        },
        
        @"AMapRouteShareSearchRequest::set_startName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteShareSearchRequest::set_startName");
            }
        
            // args
            // jsonable arg
            NSString* startName = (NSString*) args[@"startName"];
        
            // ref
            AMapRouteShareSearchRequest* ref = (AMapRouteShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.startName = startName;
            methodResult(@"success");
        },
        
        @"AMapRouteShareSearchRequest::set_destinationName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRouteShareSearchRequest::set_destinationName");
            }
        
            // args
            // jsonable arg
            NSString* destinationName = (NSString*) args[@"destinationName"];
        
            // ref
            AMapRouteShareSearchRequest* ref = (AMapRouteShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationName = destinationName;
            methodResult(@"success");
        },
        
        @"AMapNavigationShareSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNavigationShareSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapNavigationShareSearchRequest* ref = (AMapNavigationShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapNavigationShareSearchRequest::set_startCoordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNavigationShareSearchRequest::set_startCoordinate");
            }
        
            // args
            // ref arg
            AMapGeoPoint* startCoordinate = (AMapGeoPoint*) (args[@"startCoordinate"] == [NSNull null] ? nil : args[@"startCoordinate"]);
        
            // ref
            AMapNavigationShareSearchRequest* ref = (AMapNavigationShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.startCoordinate = startCoordinate;
            methodResult(@"success");
        },
        
        @"AMapNavigationShareSearchRequest::set_destinationCoordinate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapNavigationShareSearchRequest::set_destinationCoordinate");
            }
        
            // args
            // ref arg
            AMapGeoPoint* destinationCoordinate = (AMapGeoPoint*) (args[@"destinationCoordinate"] == [NSNull null] ? nil : args[@"destinationCoordinate"]);
        
            // ref
            AMapNavigationShareSearchRequest* ref = (AMapNavigationShareSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationCoordinate = destinationCoordinate;
            methodResult(@"success");
        },
        
        @"AMapShareSearchResponse::set_shareURL": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapShareSearchResponse::set_shareURL");
            }
        
            // args
            // jsonable arg
            NSString* shareURL = (NSString*) args[@"shareURL"];
        
            // ref
            AMapShareSearchResponse* ref = (AMapShareSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.shareURL = shareURL;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_beginTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_beginTime");
            }
        
            // args
            // jsonable arg
            NSString* beginTime = (NSString*) args[@"beginTime"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.beginTime = beginTime;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_interval": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_interval");
            }
        
            // args
            // jsonable arg
            NSInteger interval = [args[@"interval"] longValue];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.interval = interval;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_timeCount": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_timeCount");
            }
        
            // args
            // jsonable arg
            NSInteger timeCount = [args[@"timeCount"] longValue];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.timeCount = timeCount;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_strategy": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_strategy");
            }
        
            // args
            // jsonable arg
            NSInteger strategy = [args[@"strategy"] longValue];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.strategy = strategy;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_originId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_originId");
            }
        
            // args
            // jsonable arg
            NSString* originId = (NSString*) args[@"originId"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.originId = originId;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_destinationId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_destinationId");
            }
        
            // args
            // jsonable arg
            NSString* destinationId = (NSString*) args[@"destinationId"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationId = destinationId;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_origintype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_origintype");
            }
        
            // args
            // jsonable arg
            NSString* origintype = (NSString*) args[@"origintype"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.origintype = origintype;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_destinationtype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_destinationtype");
            }
        
            // args
            // jsonable arg
            NSString* destinationtype = (NSString*) args[@"destinationtype"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.destinationtype = destinationtype;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_parentId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_parentId");
            }
        
            // args
            // jsonable arg
            NSString* parentId = (NSString*) args[@"parentId"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.parentId = parentId;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_plateProvince": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_plateProvince");
            }
        
            // args
            // jsonable arg
            NSString* plateProvince = (NSString*) args[@"plateProvince"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plateProvince = plateProvince;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_plateNumber": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_plateNumber");
            }
        
            // args
            // jsonable arg
            NSString* plateNumber = (NSString*) args[@"plateNumber"];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.plateNumber = plateNumber;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchRequest::set_cartype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchRequest::set_cartype");
            }
        
            // args
            // jsonable arg
            NSInteger cartype = [args[@"cartype"] longValue];
        
            // ref
            AMapFutureRouteSearchRequest* ref = (AMapFutureRouteSearchRequest*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cartype = cartype;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchResponse::set_paths": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchResponse::set_paths");
            }
        
            // args
            // list arg
            NSArray<AMapPath*>* paths = (NSArray<AMapPath*>*) args[@"paths"];
        
            // ref
            AMapFutureRouteSearchResponse* ref = (AMapFutureRouteSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.paths = paths;
            methodResult(@"success");
        },
        
        @"AMapFutureRouteSearchResponse::set_timeInfos": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapFutureRouteSearchResponse::set_timeInfos");
            }
        
            // args
            // list arg
            NSArray<AMapFutureTimeInfo*>* timeInfos = (NSArray<AMapFutureTimeInfo*>*) args[@"timeInfos"];
        
            // ref
            AMapFutureRouteSearchResponse* ref = (AMapFutureRouteSearchResponse*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.timeInfos = timeInfos;
            methodResult(@"success");
        },
        
        @"AMapGeoPoint::set_latitude": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeoPoint::set_latitude");
            }
        
            // args
            // jsonable arg
            CGFloat latitude = [args[@"latitude"] floatValue];
        
            // ref
            AMapGeoPoint* ref = (AMapGeoPoint*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.latitude = latitude;
            methodResult(@"success");
        },
        
        @"AMapGeoPoint::set_longitude": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeoPoint::set_longitude");
            }
        
            // args
            // jsonable arg
            CGFloat longitude = [args[@"longitude"] floatValue];
        
            // ref
            AMapGeoPoint* ref = (AMapGeoPoint*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.longitude = longitude;
            methodResult(@"success");
        },
        
        @"AMapGeoPolygon::set_points": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapGeoPolygon::set_points");
            }
        
            // args
            // list arg
            NSArray<AMapGeoPoint*>* points = (NSArray<AMapGeoPoint*>*) args[@"points"];
        
            // ref
            AMapGeoPolygon* ref = (AMapGeoPolygon*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.points = points;
            methodResult(@"success");
        },
        
        @"AMapCity::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCity::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapCity* ref = (AMapCity*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapCity::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCity::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapCity* ref = (AMapCity*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapCity::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCity::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapCity* ref = (AMapCity*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapCity::set_num": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCity::set_num");
            }
        
            // args
            // jsonable arg
            NSInteger num = [args[@"num"] longValue];
        
            // ref
            AMapCity* ref = (AMapCity*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.num = num;
            methodResult(@"success");
        },
        
        @"AMapCity::set_districts": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapCity::set_districts");
            }
        
            // args
            // list arg
            NSArray<AMapDistrict*>* districts = (NSArray<AMapDistrict*>*) args[@"districts"];
        
            // ref
            AMapCity* ref = (AMapCity*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.districts = districts;
            methodResult(@"success");
        },
        
        @"AMapSuggestion::set_keywords": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSuggestion::set_keywords");
            }
        
            // args
            // jsonable arg
            NSArray<NSString*>* keywords = (NSArray<NSString*>*) args[@"keywords"];
        
            // ref
            AMapSuggestion* ref = (AMapSuggestion*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keywords = keywords;
            methodResult(@"success");
        },
        
        @"AMapSuggestion::set_cities": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSuggestion::set_cities");
            }
        
            // args
            // list arg
            NSArray<AMapCity*>* cities = (NSArray<AMapCity*>*) args[@"cities"];
        
            // ref
            AMapSuggestion* ref = (AMapSuggestion*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cities = cities;
            methodResult(@"success");
        },
        
        @"AMapTip::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapTip::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapTip::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapTip::set_district": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_district");
            }
        
            // args
            // jsonable arg
            NSString* district = (NSString*) args[@"district"];
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.district = district;
            methodResult(@"success");
        },
        
        @"AMapTip::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"AMapTip::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapTip::set_typecode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapTip::set_typecode");
            }
        
            // args
            // jsonable arg
            NSString* typecode = (NSString*) args[@"typecode"];
        
            // ref
            AMapTip* ref = (AMapTip*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.typecode = typecode;
            methodResult(@"success");
        },
        
        @"AMapImage::set_title": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapImage::set_title");
            }
        
            // args
            // jsonable arg
            NSString* title = (NSString*) args[@"title"];
        
            // ref
            AMapImage* ref = (AMapImage*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.title = title;
            methodResult(@"success");
        },
        
        @"AMapImage::set_url": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapImage::set_url");
            }
        
            // args
            // jsonable arg
            NSString* url = (NSString*) args[@"url"];
        
            // ref
            AMapImage* ref = (AMapImage*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.url = url;
            methodResult(@"success");
        },
        
        @"AMapPOIExtension::set_rating": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIExtension::set_rating");
            }
        
            // args
            // jsonable arg
            CGFloat rating = [args[@"rating"] floatValue];
        
            // ref
            AMapPOIExtension* ref = (AMapPOIExtension*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.rating = rating;
            methodResult(@"success");
        },
        
        @"AMapPOIExtension::set_cost": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIExtension::set_cost");
            }
        
            // args
            // jsonable arg
            CGFloat cost = [args[@"cost"] floatValue];
        
            // ref
            AMapPOIExtension* ref = (AMapPOIExtension*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cost = cost;
            methodResult(@"success");
        },
        
        @"AMapPOIExtension::set_openTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOIExtension::set_openTime");
            }
        
            // args
            // jsonable arg
            NSString* openTime = (NSString*) args[@"openTime"];
        
            // ref
            AMapPOIExtension* ref = (AMapPOIExtension*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.openTime = openTime;
            methodResult(@"success");
        },
        
        @"AMapIndoorData::set_floor": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapIndoorData::set_floor");
            }
        
            // args
            // jsonable arg
            NSInteger floor = [args[@"floor"] longValue];
        
            // ref
            AMapIndoorData* ref = (AMapIndoorData*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.floor = floor;
            methodResult(@"success");
        },
        
        @"AMapIndoorData::set_floorName": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapIndoorData::set_floorName");
            }
        
            // args
            // jsonable arg
            NSString* floorName = (NSString*) args[@"floorName"];
        
            // ref
            AMapIndoorData* ref = (AMapIndoorData*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.floorName = floorName;
            methodResult(@"success");
        },
        
        @"AMapIndoorData::set_pid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapIndoorData::set_pid");
            }
        
            // args
            // jsonable arg
            NSString* pid = (NSString*) args[@"pid"];
        
            // ref
            AMapIndoorData* ref = (AMapIndoorData*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.pid = pid;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_sname": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_sname");
            }
        
            // args
            // jsonable arg
            NSString* sname = (NSString*) args[@"sname"];
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.sname = sname;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapSubPOI::set_subtype": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapSubPOI::set_subtype");
            }
        
            // args
            // jsonable arg
            NSString* subtype = (NSString*) args[@"subtype"];
        
            // ref
            AMapSubPOI* ref = (AMapSubPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.subtype = subtype;
            methodResult(@"success");
        },
        
        @"AMapRoutePOI::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoutePOI::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapRoutePOI* ref = (AMapRoutePOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapRoutePOI::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoutePOI::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapRoutePOI* ref = (AMapRoutePOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapRoutePOI::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoutePOI::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapRoutePOI* ref = (AMapRoutePOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapRoutePOI::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoutePOI::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapRoutePOI* ref = (AMapRoutePOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapRoutePOI::set_duration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapRoutePOI::set_duration");
            }
        
            // args
            // jsonable arg
            NSInteger duration = [args[@"duration"] longValue];
        
            // ref
            AMapRoutePOI* ref = (AMapRoutePOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.duration = duration;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_type": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_type");
            }
        
            // args
            // jsonable arg
            NSString* type = (NSString*) args[@"type"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.type = type;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_typecode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_typecode");
            }
        
            // args
            // jsonable arg
            NSString* typecode = (NSString*) args[@"typecode"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.typecode = typecode;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_address": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_address");
            }
        
            // args
            // jsonable arg
            NSString* address = (NSString*) args[@"address"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.address = address;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_tel": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_tel");
            }
        
            // args
            // jsonable arg
            NSString* tel = (NSString*) args[@"tel"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.tel = tel;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_distance": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_distance");
            }
        
            // args
            // jsonable arg
            NSInteger distance = [args[@"distance"] longValue];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.distance = distance;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_parkingType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_parkingType");
            }
        
            // args
            // jsonable arg
            NSString* parkingType = (NSString*) args[@"parkingType"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.parkingType = parkingType;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_shopID": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_shopID");
            }
        
            // args
            // jsonable arg
            NSString* shopID = (NSString*) args[@"shopID"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.shopID = shopID;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_postcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_postcode");
            }
        
            // args
            // jsonable arg
            NSString* postcode = (NSString*) args[@"postcode"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.postcode = postcode;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_website": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_website");
            }
        
            // args
            // jsonable arg
            NSString* website = (NSString*) args[@"website"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.website = website;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_email": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_email");
            }
        
            // args
            // jsonable arg
            NSString* email = (NSString*) args[@"email"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.email = email;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_province": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_province");
            }
        
            // args
            // jsonable arg
            NSString* province = (NSString*) args[@"province"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.province = province;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_pcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_pcode");
            }
        
            // args
            // jsonable arg
            NSString* pcode = (NSString*) args[@"pcode"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.pcode = pcode;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_city": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_city");
            }
        
            // args
            // jsonable arg
            NSString* city = (NSString*) args[@"city"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.city = city;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_citycode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_citycode");
            }
        
            // args
            // jsonable arg
            NSString* citycode = (NSString*) args[@"citycode"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.citycode = citycode;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_district": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_district");
            }
        
            // args
            // jsonable arg
            NSString* district = (NSString*) args[@"district"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.district = district;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_gridcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_gridcode");
            }
        
            // args
            // jsonable arg
            NSString* gridcode = (NSString*) args[@"gridcode"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.gridcode = gridcode;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_enterLocation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_enterLocation");
            }
        
            // args
            // ref arg
            AMapGeoPoint* enterLocation = (AMapGeoPoint*) (args[@"enterLocation"] == [NSNull null] ? nil : args[@"enterLocation"]);
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.enterLocation = enterLocation;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_exitLocation": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_exitLocation");
            }
        
            // args
            // ref arg
            AMapGeoPoint* exitLocation = (AMapGeoPoint*) (args[@"exitLocation"] == [NSNull null] ? nil : args[@"exitLocation"]);
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.exitLocation = exitLocation;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_direction": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_direction");
            }
        
            // args
            // jsonable arg
            NSString* direction = (NSString*) args[@"direction"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.direction = direction;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_hasIndoorMap": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_hasIndoorMap");
            }
        
            // args
            // jsonable arg
            BOOL hasIndoorMap = [args[@"hasIndoorMap"] boolValue];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.hasIndoorMap = hasIndoorMap;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_businessArea": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_businessArea");
            }
        
            // args
            // jsonable arg
            NSString* businessArea = (NSString*) args[@"businessArea"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.businessArea = businessArea;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_indoorData": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_indoorData");
            }
        
            // args
            // ref arg
            AMapIndoorData* indoorData = (AMapIndoorData*) (args[@"indoorData"] == [NSNull null] ? nil : args[@"indoorData"]);
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.indoorData = indoorData;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_subPOIs": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_subPOIs");
            }
        
            // args
            // list arg
            NSArray<AMapSubPOI*>* subPOIs = (NSArray<AMapSubPOI*>*) args[@"subPOIs"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.subPOIs = subPOIs;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_images": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_images");
            }
        
            // args
            // list arg
            NSArray<AMapImage*>* images = (NSArray<AMapImage*>*) args[@"images"];
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.images = images;
            methodResult(@"success");
        },
        
        @"AMapPOI::set_extensionInfo": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapPOI::set_extensionInfo");
            }
        
            // args
            // ref arg
            AMapPOIExtension* extensionInfo = (AMapPOIExtension*) (args[@"extensionInfo"] == [NSNull null] ? nil : args[@"extensionInfo"]);
        
            // ref
            AMapPOI* ref = (AMapPOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.extensionInfo = extensionInfo;
            methodResult(@"success");
        },
        
        @"AMapAOI::set_uid": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAOI::set_uid");
            }
        
            // args
            // jsonable arg
            NSString* uid = (NSString*) args[@"uid"];
        
            // ref
            AMapAOI* ref = (AMapAOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.uid = uid;
            methodResult(@"success");
        },
        
        @"AMapAOI::set_name": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAOI::set_name");
            }
        
            // args
            // jsonable arg
            NSString* name = (NSString*) args[@"name"];
        
            // ref
            AMapAOI* ref = (AMapAOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.name = name;
            methodResult(@"success");
        },
        
        @"AMapAOI::set_adcode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAOI::set_adcode");
            }
        
            // args
            // jsonable arg
            NSString* adcode = (NSString*) args[@"adcode"];
        
            // ref
            AMapAOI* ref = (AMapAOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.adcode = adcode;
            methodResult(@"success");
        },
        
        @"AMapAOI::set_location": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"AMapAOI::set_location");
            }
        
            // args
            // ref arg
            AMapGeoPoint* location = (AMapGeoPoint*) (args[@"location"] == [NSNull null] ? nil : args[@"location"]);
        
            // ref
            AMapAOI* ref = (AMapAOI*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.location = location;
            methodResult(@"success");
        },
        
    };
}

@end
